//Proto file that describe the protocol communication between Commands and Event handlers

syntax = "proto3";

import "google/protobuf/empty.proto";
import "cloudstate/entity_key.proto";
import "google/api/annotations.proto";
import "google/api/http.proto"; //To expose gRCP protocol as API Rest

package io.cloudstate.shopping;

option java_package = "io.cloudstate.shopping";

service ShoppingCart {

    rpc AddItem (AddLineItem) returns (google.protobuf.Empty) {
        //Very cool way to expose rpc protocol as API Rest
        option (google.api.http) = {
            post: "/cart/{user_id}/items/add"
            body: "*"
        };
    }

    rpc GetItem(GetLineItem) returns (LineItem) {
        option (google.api.http) = {
            get: "/cart/{user_id}/{product_id}"
        };
    }

    rpc RemoveItem (RemoveLineItem) returns (google.protobuf.Empty) {
        option (google.api.http).post = "/cart/{user_id}/items/{product_id}/remove";
    }

    rpc GetCart (GetShoppingCart) returns (Cart) {
        option (google.api.http) = {
            get: "/carts/{user_id}"
        };
    }

}

message AddLineItem {
    string user_id = 1 [(.cloudstate.entity_key) = true];
    string product_id = 2;
    string name = 3;
    int32 quantity = 4;
}

message RemoveLineItem {
    string user_id = 1 [(.cloudstate.entity_key) = true];
    string product_id = 2;
}

message GetLineItem {
    string user_id = 1 [(.cloudstate.entity_key) = true];
    string product_id = 2;
}

message GetShoppingCart {
    string user_id = 1 [(.cloudstate.entity_key) = true];
}

message LineItem {
    string product_id = 1;
    string name = 2;
    int32 quantity = 3;
}

message Cart {
    repeated LineItem items = 1;
}